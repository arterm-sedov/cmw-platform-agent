---
alwaysApply: true
---

- Code style: langchain-pure, dry, lean, abstract, modular
- Ensure LangChain purity.
- Follow LangChain's best practices, patterns, and conventions:
    - https://python.langchain.com/docs/introduction/
    - https://python.langchain.com/docs/concepts/streaming/
    - https://python.langchain.com/docs/concepts/runnables/
    - https://python.langchain.com/docs/concepts/tool_calling/
    - https://langchain-ai.github.io/langgraph/concepts/memory/
    - https://python.langchain.com/docs/how_to/
    - https://langchain-ai.github.io/langgraph/concepts/why-langgraph/
    - https://python.langchain.com/docs/how_to/
    - https://python.langchain.com/docs/concepts/
    - https://python.langchain.com/docs/integrations/providers/
    - https://python.langchain.com/api_reference/
    - https://langchain-ai.github.io/langgraph/guides/
    - https://langchain-ai.github.io/langgraph/concepts/streaming/
    - https://langchain-ai.github.io/langgraph/concepts/memory/
- Follow Gradio's best practices, patterns, and conventions:
    - https://www.gradio.app/docs
    - https://www.gradio.app/guides/the-interface-class/
    - https://www.gradio.app/guides/interface-state/
    - https://www.gradio.app/guides/blocks-and-event-listeners/
    - https://www.gradio.app/guides/controlling-layout/
    - https://www.gradio.app/guides/dynamic-apps-with-render-decorator/
- Follow Python's best practices, patterns, and conventions:
    - https://peps.python.org/pep-0008/
    - https://peps.python.org/pep-0257/
    - https://google.github.io/styleguide/pyguide.html
    - https://docs.python-guide.org/
- Be super smart, create super lean and dry code.
- Implementation must be modular, linted, abstract, deduplicated, pydantic
- Use abstractions.
- Use modularization.
- Ensure testability and extensibility.
- Always run linter after making any changes
- When refactoring code, change only the levant parts.
- Group and isolate code based on its function in different files to avoid clutter.
- Do not duplicate code, encapsulate any reused code in methods/functions.
- Never break existing code.
- Do not delete logging, but update it.
- Do not delete comments, rather update them.
- Produce flawless code.
- Reanalyze your changes twice for any issues you might have introduced.
- Place imports always on top.
- Use environment variables for secrets.
- Put reports to a relevant `docs/**/progress_reports/` folder under `/docs/` or its relevant `cwd/subfolder`
- Put tests to `/agent_ng/_tests` preferably, or under a relevant `cwd/_tests` where the files are modified or created, otherwise to `@/misc_files`
